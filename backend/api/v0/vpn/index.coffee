# copyright 2013 J. Maurice <j@wiz.biz>

require './_framework'
require './_framework/http/resource/base'
require './_framework/http/account/session'
require './_framework/http/db/mongo'
require './_framework/util/world'

wiz.package 'cypherpunk.backend.api.v0.vpn'

class cypherpunk.backend.api.v0.vpn.module extends cypherpunk.backend.api.base
	database: null

	init: () =>
		#@database = new cypherpunk.backend.db.vpn(@server, this, @parent.parent.cypherpunkDB)
		# api methods
		@routeAdd new cypherpunk.backend.api.v0.vpn.certificate(@server, this, 'certificate')
		super()

class cypherpunk.backend.api.v0.vpn.certificate extends cypherpunk.backend.api.base
	level: cypherpunk.backend.server.power.level.expired
	handler: (req, res) =>
		#{{{
		p12 = ""
		#}}}

		out =
			p12: p12

		#console.log out
		res.send 200, out

# vim: foldmethod=marker wrap
